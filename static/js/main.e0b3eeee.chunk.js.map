{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundry","state","hasError","scriptName","error","info","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","robot","toLowerCase","includes","length","href","style","color","textDecoration","fetch","then","response","json","users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAaeA,EAXD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAI,aAAaC,IAAG,+BAA0BL,EAA1B,cACzB,gCACI,6BAAKC,IACL,4BAAIC,WCaLI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCMlBC,EAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,cACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKd,UAAU,iDAAf,SACMc,EAAMC,YCsBLC,E,kDAxBX,WAAYF,GAAQ,IAAD,8BACf,cAAMA,IACDG,MAAQ,CACTC,UAAU,EACVC,WAAY,IAJD,E,qDASnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEL,UAAW,IAC3BI,KAAKC,SAAS,CAAEJ,WAAaE,M,oBAIjC,WACI,OAAIC,KAAKL,MAAMC,SACJ,0DAGJI,KAAKR,MAAMC,a,GArBCS,IAAMC,WCwDlBC,G,wDAlDX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAcD,EAAME,OAAOC,SAP3C,EAAKd,MAAS,CACVb,OAAQ,GACRyB,YAAa,IAJP,E,0CAYd,WACI,MAAgCP,KAAKL,MAA7Bb,EAAR,EAAQA,OAAQyB,EAAhB,EAAgBA,YAEVG,EAAiB5B,EAAO6B,QAAO,SAAAC,GACjC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASP,EAAYM,kBAIzD,OAAK/B,EAAOiC,OAKJ,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,SACI,mBAAGsC,KAAK,yCAAyCtC,UAAU,OAAOuC,MAAO,CAACC,MAAM,UAAWC,eAAgB,WAA3G,2BAIJ,cAAC,EAAD,CAAWhC,aAAca,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvB,OAAQ4B,WAb3B,oBAAIhC,UAAU,KAAd,uB,+BAsBf,WAAsB,IAAD,OACjB0C,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKvB,SAAS,CAAEnB,OAAQ0C,W,GA/ClCtB,IAAMC,YCKTsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.e0b3eeee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card  = ({ id, name, email }) => {\r\n    return (\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robot card' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder=\"Search name\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className='center pa2 overflow-y-scroll ba bw2 vh-75 w-75'>\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\n\nclass ErrorBoundry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            scriptName: ''\n        }\n    }\n\n    // Render the error message if something went wrong.\n    componentDidCatch(error, info) {\n        this.setState({ hasError : true });\n        this.setState({ scriptName : info });\n\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Something went wrong. :(</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'; \r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state =  {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    \r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield : event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        // Filter the robots based on their name (always lowercase)\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        // Display 'Loading' if there are too many users, else display the robots\r\n        if (!robots.length) {\r\n            return <h1 className=\"tc\">Loading</h1>;\r\n        } \r\n        else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">\r\n                        <a href=\"https://github.com/DandyDo/robofriends\" className=\" dim\" style={{color:'inherit', textDecoration: 'inherit'}}>\r\n                            Robofriends\r\n                        </a>\r\n                    </h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>   \r\n            );\r\n        }\r\n    }\r\n\r\n    // Fake online REST API that contains users\r\n    componentDidMount () {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {this.setState({ robots: users })});\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}